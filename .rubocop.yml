require:
  - rubocop-performance
  - rubocop-rspec

AllCops:
  DisplayCopNames: true
  TargetRubyVersion: 3.2
  StyleGuideBaseURL: https://github.com/rewindio/ruby-style-configs/
  NewCops: enable
  Exclude:
    - .git/**/*
    - bin/**/*
    - log/**/*
    - tmp/**/*
    - vendor/**/*

# Layout cop configuration

Layout/LineLength:
  Max: 160

# Lint cop configuration

Lint/Debugger:
  Enabled: true
Lint/SuppressedException:
  AllowComments: true

# Metrics cop configuration

Metrics/AbcSize:
  Enabled: false
Metrics/BlockLength:
  Enabled: false
Metrics/ClassLength:
  Enabled: false
Metrics/CyclomaticComplexity:
  Enabled: false
Metrics/MethodLength:
  Enabled: false
Metrics/ModuleLength:
  Enabled: false
Metrics/ParameterLists:
  Enabled: false
Metrics/PerceivedComplexity:
  Enabled: false

# Naming cop configuration
Naming/MethodParameterName:
  Enabled: true
  Exclude:
    - spec/support/helpers.rb

Naming/BlockForwarding:
  EnforcedStyle: explicit

# Minitest cop configuration

# Performance cop configuration

# Rails cop configuration

# RSpec cop configuration

RSpec/ExampleLength:
  Max: 15
  CountAsOne: ['array', 'heredoc', 'hash']
RSpec/MultipleExpectations:
  Max: 5
# This cop does more harm than good and makes certain data-heavy classes difficult to test.
# Even Rubocop themselves disables this one.
# https://github.com/rubocop/rubocop/blob/efb1e628adfec08d2fe7875779fc16b42bde9f77/.rubocop.yml#L145
# https://stackoverflow.com/a/67149191
RSpec/MultipleMemoizedHelpers:
  Enabled: false
RSpec/NestedGroups:
  Max: 5
RSpec/VerifiedDoubleReference:
  Enabled: false
RSpec/FilePath:
  Exclude:
    - spec/omni_auth/miro/version_spec.rb
RSpec/SpecFilePathFormat:
  Exclude:
    - spec/omni_auth/miro/version_spec.rb

# Style cop configuration
Style/ArgumentsForwarding:
  UseAnonymousForwarding: false
Style/AsciiComments:
  Enabled: false
Style/ClassAndModuleChildren:
  EnforcedStyle: compact
  Exclude:
    - config/**/*.rb
    - lib/**/*.rb
Style/DateTime:
  Enabled: false
Style/Documentation:
  Enabled: false
Style/FrozenStringLiteralComment:
  Details: >-
    Add `# frozen_string_literal: true` to the top of the file. Frozen string
    literals will become the default in a future Ruby version, and we want to
    make sure we're ready.
  EnforcedStyle: always
  SupportedStyles:
    - always
    - never
Style/HashEachMethods:
  Enabled: true
Style/HashSyntax:
  EnforcedShorthandSyntax: either
Style/HashTransformKeys:
  Enabled: true
Style/HashTransformValues:
  Enabled: true
Style/NumericPredicate:
  Enabled: false # This is an unsafe setting which has the potential to introduce bugs because nil == 0 is false, where nil.zero? throws an exception.
Style/RedundantSelf:
  Enabled: true
Style/RescueStandardError:
  Enabled: false

# Gem Spec cop configuration
Gemspec/RequireMFA:
  Enabled: false
